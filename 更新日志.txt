V0.1.5 - 性能优化与修复
    + GPU占用现在降低为原本的1/10
    + 性能诊断：在主窗口中实现了分层 A/B 测试机制，并添加了 FPS 和重绘区域的调试叠加层，以便精确诊断性能瓶颈。
    + 渲染优化：将背景流光动画从 XAML 迁移到 C#，并引入 FrameLimiter（帧率限制器），将动画更新频率限制在 60fps，显著降低了高刷新率显示器下的 GPU/CPU 占用。
    + 平台配置：明确配置了 Win32 平台的渲染模式和合成模式，优先使用硬件加速，确保应用在 Windows 上以最高效的方式运行。
    + 性能修复：通过实现 `IDisposable` 模式，并采取“销毁再重建”的策略来管理编辑视图，彻底解决了因 GPU 资源泄漏导致的性能占用在进入编辑页后永久性升高的问题。

V0.1.4 - 编辑页面交互修复与架构文档
    + 功能修复：通过在主窗口实现全局指针事件处理，彻底解决了点击窗口空白区域时输入框无法失去焦点的问题。
    + 功能优化：优化了输入框逻辑，现在只有当输入框内容为空且失去焦点时，其值才会恢复为默认值，改善了用户输入体验。
    + 项目维护：创建了 openspec/ui-architecture.md 文档，对项目的UI层级、视图关系和事件处理进行了梳理，为未来开发提供支持。

V0.1.3 - 核心修复与功能新增
    - 图标保存策略: 修复了 `desktop.ini` 中 `IconResource` 键覆盖 `IconFile` 键导致图标不生效的根本性问题。现在，程序会根据图标源智能写入正确的键值对，确保本地提取的图标被优先使用。
    - 图标提取引擎: 集成了基于 `RT_GROUP_ICON` 资源解析的 `IconExtractor`，并支持按索引提取特定图标组，彻底解决了图标颜色失真、透明度错误和方向不正确的问题。
    - 文件拖拽行为: 修复了拖拽文件会错误改变编辑目录的问题。现在，拖拽文件只会更新当前文件夹的图标，行为与手动选择文件一致。
    - 多图标预览: 恢复了对 `.ico` 文件和 `.exe`/`.dll` 文件中所有独立图标的完整预览功能。
    + 文件类型支持: 在编辑页面的“选择图标”功能中，新增了对 `.exe` 和 `.dll` 文件的支持。

V0.1.2 - 项目图标与文档优化
    + 项目图标: 为应用程序添加了新的、更精细的图标 (`FSM_Image_Multi.ico`)，提升了品牌辨识度。
    + 英文 README: 创建了 `README.en-US.md`，提供完整的英文文档，并通过语言切换链接与中文版互联。
    + README 布局: 优化了 `README.md` 的布局，将项目 Logo 居中置于顶部，并美化了图片标题的排版，使其更具可读性和专业性。

V0.1.1 - 功能与流程优化
    + 集成 OpenSpec 工作流 (`openspec/`)
    + 填充项目上下文 `project.md`
    + 将项目重命名为 `FolderStyleEditorForWindows`
    + 更新 `.gitignore` 

V0.1.0 - 首个发布版本
    + 第一个发布版本
    + 创建README.md
    + 整理和开源协议有关部分

V0.0.36 临时目录迁移与语言默认
    + 将 history.json 与语言等配置统一写入 %Temp%\WindowsFolderStyleEditor
    + 首次启动识别系统语言，简体/繁体默认 zh-CN，其他默认 en-US
    + 记录语言切换状态到临时配置目录
    - 移除在当前目录生成 history.json 的行为

V0.0.35 给窗口关闭和最小化增加动画
    +关闭动画
    +打开动画
    +最小化动画
    +从最小化放大动画

V0.0.34 修复无法修改权限不足的文件夹 & 快捷键保存
    + 遇到管理员权限目录自动发起提权并继续修改
    + 编辑界面支持 Ctrl+S 等价于“保存”（暂未实现）

V0.0.33 语言切换弹出菜单交互修复
    + 读取 lang 中语言自定义名并显示（代号置于括号）
    + 悬停透明度从50%过渡至85%（作用于上层容器）
    - 取消语言列表容器不必要的悬停动画
    - 收紧展开区域高度约10%以改善密度

V0.0.32 重置图标与清除样式一键归位
    + “重置图标/清除所有样式”统一置为 C:\WINDOWS\System32\SHELL32.dll,4
    - 清除样式时同时清空别名

V0.0.31 最近编辑卡片阴影截断问题
    + 将按钮直接置于可滚动列表内以完整渲染阴影
    - 移除多余中间容器避免裁剪

V0.0.30 最近编辑路径与标签显示优化
    + 新增“正在编辑目录”跑道形标签并固定右侧展示
    + 达到最大宽度时启用右向左白色渐变增强可读性
    - 左侧路径文本截断到标签起点，超长名左侧裁切

V0.0.29 优化默认体验：仅改别名不改图标
    + 保持文件夹图标为文件夹图标（SHELL32.dll,4）
    - 纠正初始值误设导致图标变“文件”的问题

V0.0.28 语言菜单背景可读性修复
    + 语言项按钮添加25%白色半透明底
    - 避免牵连重构，仅限局部样式修改

V0.0.27 悬停动画边界条件修复
    + 调整“点击选择文件夹”与标题的悬停交互不互相干扰
    - 取消影响回缩的无关缩放触发

V0.0.26 图标选择器与引用逻辑修复
    + 恢复一行容纳5个图标的布局
    - 排除 shell32.dll 拷贝进 .ICON，系统库走绝对路径

V0.0.25 主标题布局与文案修正
    + 合并为完整句式并实现水平/垂直居中
    + 编译运行自检通过

V0.0.24 语言选择器优化与滚动选择
    + 语言文件顶部支持“语言名称自定义”，列表显示“名称 (代号)”
    + 支持平滑滚动与编译后联调测试

V0.0.23 相对路径写入 desktop.ini
    + 文件位于当前目录时写入相对路径（不含盘符）
    + 不在当前目录则移动至隐藏 .ICON 并引用相对路径

V0.0.22 保存反馈与资源管理器刷新
    + 保存后显示白色半透明跑道形“保存成功”提示
    + 调用 SHChangeNotify 强制刷新图标显示

V0.0.21 完成编辑页大图标选择器
    + 图标库四行高、横向滚轮滑动、编号标识齐全
    - 摒弃直接套用 demo.html 的 Web 实现

V0.0.20 页面切换闪烁与自动取图标
    + 修复主页↔编辑页动画结束瞬间闪烁
    + 新增“自动获取图标”并按优先级轮换展示（子进程检索）

V0.0.19 支持拖拽文件夹到窗口
    + 顶层透明层与动态色层均可接收拖拽路径
    - 不影响现有交互命中区域

V0.0.18 首启落到主页面
    + 修复初次启动直接进入编辑页的问题
    + 中文交流与实现备注整理

V0.0.17 首启落到主页面（重复问题归并）
    + 统一路由初始化逻辑，仅在选择目录后进入编辑页
    - 移除历史绕路代码

V0.0.16 UI细节与交互修缮（I）
    + 按钮/输入/板块补全阴影与状态
    + 选择目录/图标弹出系统选择器
    + 标题/返回/最小化/关闭图标上下居中
    + 最近编辑使用统一样式并可直达编辑页

V0.0.15 UI细节与交互修缮（II）
    + 保存文字真正居中；最近编辑悬停轻微变暗
    + 打开资源管理器/属性按钮恢复按钮态
    - 去除系统主题色导致的违和高亮

V0.0.14 MainWindow 动画与代码修正
    + 完成构造函数闭合与 Transform 目标修正
    + AnimateIn/Out 基于 Transform.XProperty 正确运作

V0.0.13 主页白色衬底恢复
    + 将窗口底层背景恢复为纯白以衬托流光层
    - 纠正半透明层误置导致的穿透

V0.0.12 主页背景与功能细节合订修
    + 默认 IconResource 缺失时写入 SHELL32.dll,3 与 ViewState
    + 别名与文件夹名相同则清理 LocalizedResourceName
    + 最近编辑可点击、悬停轻暗化
    - 关闭/最小化按钮失效问题修复

V0.0.11 通过 msbuild 编译并清错
    + 跑通 msbuild，逐条修复编译报错直至可运行
    - 移除不合规调用与无用依赖

V0.0.10 拖拽与主页面选择重构
    + 重建拖拽接收与空白点击选择目录流程
    - 移除遮挡阴影的隐形容器，历史卡片阴影正常渲染

V0.0.9 基础 UI 比例布局搭建
    + 依据设计稿用比例实现窗口与主要区域栅格
    - 预留后续精准像素级微调入口

V0.0.8 严格对标 UI 设计
    + 统一圆角、模糊、流光、层级与间距
    - 对无法一比一实现处做兼容并记录至“无法实现.txt”

V0.0.7 读取项目设计与问题清单
    + 通读带书名号文档并输出问题汇总
    - 标注风险与改造优先级

V0.0.6 测试与调试跑通
    + 用指定 MSBuild 路径完整测试与 Debug
    + 校验需求书与代码方向一致性并修正

V0.0.5 通读《WindowsFolderStyleEditor》
    + 提炼核心需求、页面结构、关键交互
    - 形成后续实现与验收清单

V0.0.4 终端上传与 Git 初始化
    + 创建仓库、初始化忽略与分支策略
    - 规范提交信息与版本流

V0.0.3 初版需求阅读与分析
    + 读取《WindowsFolderStyleEditor》并形成实现笔记
    - 标注先决条件与外部依赖

V0.0.2 分析《WindowsFolderStyleEditor》可行性

V0.0.1 新建项目